https://stackoverflow.com/questions/51653440/does-node-js-use-libuv-thread-pool-for-network-i-o

For some standard library function calls, the node C++ side and libuv decide to do expensive calculations outside of the event loop entirely.They make something called a thread pool that thread pool is a series of four threads that can be used for running computationally intensive tasks such as hashing functions or reading files in hard drive(fs module functions). There are ONLY FOUR things that use the thread pool - DNS lookup, fs, crypto and zlib.

So just as the node standard library has some functions that make use of libuv thread pool it also has some functions that make use of code that is built into the underlying operating system through libuv. Neither libuv nor node has any code to handle all of this low level network request operations. Instead libuv delegates the request making to the underlying operating system. So it's actually our operating system that does the real network requests. Libuv is used to issue the request and then it just waits on the operating system to emit a signal that some response has come back to the request. Network I/O is done by network hardware in your system and ISP.OS just keeps tracking of connections and once I/O operations done OS will pass the results to Libuv.